_MOE = {
    IsOpenLog = true,
    IsEditor = false,
    IsDS = false,
}

_MOE.Logger = {
    Log = function (...)
        if _MOE.IsOpenLog then
            CS.UnityEngine.Debug.Log(...)
        end
    end,
    LogError = function (...)
        if _MOE.IsOpenLog then
            CS.UnityEngine.Debug.LogError(...)
        end
    end,
    LogWarning = function (...)
        if _MOE.IsOpenLog then
            CS.UnityEngine.Debug.LogWarning(...)
        end
    end,
    LogFormat = function (fmt, ...)
        if _MOE.IsOpenLog then
            CS.UnityEngine.Debug.LogFormat(fmt, ...)
        end
    end,
    LogErrorFormat = function(fmt, ...)
        if _MOE.IsOpenLog then
            CS.UnityEngine.Debug.LogErrorFormat(fmt, ...)
        end
    end,
    LogWarningFormat = function(fmt, ...)
        if _MOE.IsOpenLog then
            CS.UnityEngine.Debug.LogWarningFormat(fmt, ...)
        end
    end
}

_MOE.Application = CS.UnityEngine.Application
_MOE.NetManager = CS.NsTcpClient.NetManager:GetInstance()
_MOE.NetState = CS.NsTcpClient.eClientState
_MOE.NetClientClass = CS.NsTcpClient.NetClient
_MOE.ResourceManager = CS.ResourceMgr:GetInstance()
_MOE.GameObject = CS.GameObject
_MOE.GameStart = CS.SOC.GamePlay.GameStart.Instance
_MOE.GameStartTransform = _MOE.GameStart.transform
_MOE.RectTransformClass = typeof(CS.UnityEngine.RectTransform)
_MOE.ObjetDestroy = CS.UnityEngine.Object.Destroy
_MOE.LoadSceneMode = CS.UnityEngine.SceneManagement.LoadSceneMode
_MOE.CSSceneManager = CS.UnityEngine.SceneManagement.SceneManager
_MOE.SceneEventProgressStatus = CS.Unity.Netcode.SceneEventProgressStatus
_MOE.RectClass = CS.UnityEngine.Rect
_MOE.Vector2 = CS.UnityEngine.Vector2
_MOE.Vector3 = CS.UnityEngine.Vector3
_MOE.Quaternion = CS.UnityEngine.Quaternion
_MOE.ILuaBinder = CS.SOC.GamePlay.ILuaBinder
_MOE.LuaEvent_MonoEventType = CS.SOC.GamePlay.LuaEvent_MonoEventType
_MOE.BaseResLoaderAsyncType = typeof(CS.BaseResLoaderAsyncMono)
_MOE.StringToBytes = CS.System.Text.Encoding.UTF8.GetBytes
_MOE.DsNetworkHelper = CS.SOC.GamePlay.DsNetworkHelper
_MOE.NetCodeHelper = CS.Unity.Netcode.NetCodeHelper
_MOE.TcpUtils = CS.NsTcpClient.NetUtils
_MOE.class = require("_Common.BaseClass") -- class框架
_G.BaseClass = _MOE.class
_MOE.Json = require("_Common.json")
_MOE.BaseModel = require("_Common.BaseModel")
_MOE.BaseScene = require("_Common.BaseScene")
_MOE.TableUtils = require("_Common.TableUtils")
_MOE.StateBase = require("_Common.IState")
_MOE.StateManagerBase = require("_Common.StateManager")
_MOE.SkillBase = require("_Common.Skill.SkillBase")
_MOE.SkillManagerBase = require("_Common.Skill.SkillManager")

_MOE.FindMainCamera = function ()
    local gameObj = _MOE.GameObject.FindGameObjectWithTag("MainCamera")
    if not gameObj then
        return nil
    end
    local ret = gameObj:GetComponent(typeof(CS.UnityEngine.Camera))
    return ret
end

_G.ErrorHandler = function (err)
    _MOE.Logger.LogError(err)
	_MOE.Logger.LogError(debug.traceback())
end

-------- 全局事件 ------------
_MOE.EventManager = require("_Common.EventManager").New()

return _MOE