--- DS服务器的APP
local BaseAppClass = require("_Common.BaseApp")
require("_DS.SceneEnum")


local _M = _MOE.class("DSApp", BaseAppClass)

local function CreateDsNetWorkObject(self, onFinish)
    local ret = _MOE.ResourceManager:CreateGameObjectAsync("Resources/@NetCode/DsNetworkManager.prefab",
    function(process, isDone, obj)
        if isDone then
            if obj then
                obj.name = "DsNetworkManager"
               -- obj.transform:SetParent(_MOE.GameStartTransform, false)
                self.DsNetworkManager = obj
                if onFinish then
                    onFinish(self)
                end
            end
        end
    end
    )
    return ret
end

function _M:OnPreloadFinish()
    if self.DsNetworkManager then
        _MOE.Logger.Log("[DSApp] OnPreloadFinish")
        -- _MOE.SceneManager:SwitchScene(_MOE.SceneEnum.LoginScene)
    end
end

----- 解析命令行参数
local function ParseStartupCommands(self)
    local commandLineArgs = CS.System.Environment.GetCommandLineArgs()
    if commandLineArgs then
        local commandArgsType = type(commandLineArgs)
        if commandArgsType == "userdata" then
            if commandLineArgs.Length >= 2 then
                local json = commandLineArgs[1]
                xpcall(
                    function ()
                        tb = _MOE.Json.decode(json)
                    end, function (err)
                        tb = nil
                        _G.ErrorHandler(err)
                    end
                )
                _MOE.TB = tb
            end
        else
            _MOE.Logger.LogError("[DS] commandLineArgs type error: " .. commandArgsType)
        end
    end
end

function _M:QuitGame(...)
    return _MOE.Application.Quit(...)
end

------------------------------ 继承方法 -------------------------------
function _M:OnInit()
    ParseStartupCommands(self)
    if not _MOE.TB then
        self:QuitGame()
        return
    end
    if CreateDsNetWorkObject(self, self.OnPreloadFinish) then
        -- 切换场景
        _MOE.SceneManager:SwitchScene(_MOE.SceneEnum.MultiScene) -- 切换到多人场景
    end
end

return _M