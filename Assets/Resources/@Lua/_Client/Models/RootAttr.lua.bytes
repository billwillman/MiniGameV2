local RootAttr = _MOE.class("RootAttrModel", _MOE.BaseModel)

function RootAttr:OnInit()
    _MOE.BindGSMsgNtf(_MOE.MsgIds.SM_LOGIN_RET, self, self._OnLoginRet)
    _MOE.BindGSMsgNtf(_MOE.MsgIds.SM_LOGIN_KICKOFF, self, self._OnLoginKickOff)
end

function RootAttr:SendLoginMsg(userName, password)
    _MOE.Models.NetModel:SendMsg(_MOE.MsgIds.CM_Login, {userName = userName, password = password})
end

function RootAttr:_OnLoginRet(msg, net)
    if msg.result == 0 then
        self.user = msg.user
        if msg.dsData and next(msg.dsData) ~= nil then
            _MOE.TB = _MOE.TB or {}
            _MOE.TB["dsData"] = {
                ip = msg.dsData.ip,
                port = msg.dsData.port,
                scene = msg.dsData.scene
            }
        elseif _MOE.TB then
            _MOE.TB["dsData"] = nil
        end
    end
    _MOE.EventManager:DispatchEvent(_MOE.ClientEvents.ON_LOGIN_RET, msg)
end

function RootAttr:GetUserInfo()
    return self.user
end

function RootAttr:_OnLoginKickOff(msg, net)
    -- 被踢
    _MOE.EventManager:DispatchEvent(_MOE.ClientEvents.ON_LOGIN_KICKOFF, msg)

    _MOE.TableUtils.PrintTable2(msg) -- 打印日志
end

return RootAttr