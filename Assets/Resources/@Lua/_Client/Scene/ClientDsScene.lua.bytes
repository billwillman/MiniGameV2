local DsScene = _MOE.class("ClientDsScene", _MOE.BaseScene)

DsScene[".superctor"] = true -- 会调用父类方法

function DsScene:Ctor(sceneName, dsNetworkManager)
    self.DsNetworkManager = dsNetworkManager
    self.Transport = dsNetworkManager.gameObject:GetComponent(typeof(CS.Unity.Netcode.Transports.UTP.UnityTransport))
    self.SceneLoader = dsNetworkManager.gameObject:GetComponent(typeof(_MOE.BaseResLoaderAsyncType))
end

local function GenerateScenesInBuild(self)
    local SceneManager = self.DsNetworkManager.SceneManager
    if SceneManager then
        local dsData = _MOE.TB["dsData"]
        local scenes = {dsData.scene}
        _MOE.NetCodeHelper.InitHelper(SceneManager)
        _MOE.NetCodeHelper.GenerateScenesInBuild2(SceneManager, scenes)
    end
end

function DsScene:OnEnter()
    _MOE.Logger.Log("ClientDsScene Enter")
    local dsData = _MOE.TB["dsData"]
    self.Transport:SetConnectionData(dsData.ip, dsData.port)
    if self.DsNetworkManager:StartClient() then
        GenerateScenesInBuild(self)
    end
end

function DsScene:OnExit()
    self.DsNetworkManager = nil
    self.Transport = nil
    self.SceneLoader = nil
end

return DsScene