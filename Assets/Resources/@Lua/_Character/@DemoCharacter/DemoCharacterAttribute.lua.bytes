local CSharpEventContainer = require("_Common.CSharpEventContainer")
local AttributeDefine = require("_Attribute.Character_AttributeDefine")

local _M = _MOE.class("DemoCharacterAttribute", CSharpEventContainer)

function _M:Ctor(AttributeComponent, binder)
    self.AttributeComponent = AttributeComponent
    self.Binder = binder

    local EventType = _MOE.LuaEvent_MonoEventType
    self.Binder:RegisterLuaEvent(EventType.Destroyed:GetHashCode(), self.OnDestroy)
    self.Binder:RegisterLuaEvent(EventType.Start:GetHashCode(), self.OnStart)
end

function _M:ClearAllAttributeChangeEvents()
    self.AttributeComponent:SetAttributeChangeEvent(AttributeDefine.HPGroup._Index, nil)
end

function _M:OnDestroy()
    if not _MOE.IsDS then
        self:ClearAllAttributeChangeEvents()
    end

    _MOE.EventManager:UnRegisterEvents(self)
    self:UnRegsterAllCsharpEvents()
    self.Binder = nil
    self.AttributeComponent = nil
end

function _M:RegisterAttributeChangeEvents()
    self.AttributeComponent:SetAttributeChangeEvent(AttributeDefine.HPGroup._Index, function()
    end)
end

function _M:OnStart()
    if not _MOE.IsDS then
        self:RegisterAttributeChangeEvents()
    end
end

return _M