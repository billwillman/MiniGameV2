local _M = {}

_M.TransportType = {
    UnityTransport = 0,
    UOSWebSocket = 1,
    UOSKCP = 2,
}

function _M.SetTransportIpAndPort(transport, ip, port)
    -- Unity Transport
    if transport.SetConnectionData ~= nil then
        transport:SetConnectionData(ip, port)
        return
    end
    -- KCP transport
    if transport.Host ~= nil and transport.Port ~= nil then
        transport.Host = ip
        transport.Port = port
        return
    end
end

function _M.GetTransportConnectionData(transport)
    -- Unity Transport
    if transport.ConnectionData ~= nil then
        return transport.ConnectionData
    end
    -- KCP transport
    if transport.Host ~= nil and transport.Port ~= nil then
        local ConnectionData = {Address = transport.Host, Port = transport.Port}
        return ConnectionData
    end
end

function _M.GetTransportComponent(dsNetworkManager, transportType)
    if transportType == _M.TransportType.UnityTransport then
        return dsNetworkManager.gameObject:GetComponent(typeof(CS.Unity.Netcode.Transports.UTP.UnityTransport))
    end
    -- KCP
    if transportType == _M.TransportType.UOSKCP then
        return dsNetworkManager.gameObject:GetComponent(typeof(CS.Netcode.Transports.KCP.Kcp2kTransport))
    end
end

return _M